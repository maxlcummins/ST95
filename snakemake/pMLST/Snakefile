import re
import subprocess
import os

configfile: "/projects/AusGEM/Users/Max/Manuscripts/ST95/snakemake/masterconfigs/masterconfig_plasdb.yaml"

#Get assemblies
sample_ids, = glob_wildcards(config['assemblies']+"/{sample}.fasta")
prefix = config['prefix']
maxthreads = snakemake.utils.available_cpu_count()
scheme = config['pmlst_scheme']

print(sample_ids)


rule all:
	input:
		expand(config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}/results_tab_named.tsv", sample=sample_ids, prefix=prefix, scheme=scheme)
		#expand(config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}/{scheme}.txt", prefix=prefix, scheme=scheme, sample=sample_ids)

rule pMLST_run:
	input:
		assembly = config['assemblies']+"/{sample}.fasta",
	output:
		config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/results_tab.tsv"
	conda:
		"config/pMLST.yaml"
	params:
		output_dir = config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out",
		tmp = config['outdir']+"/{prefix}/pMLST/{scheme}/temp_{sample}",
		pmlst_tool = config['pmlst_tool'],
		db = "{scheme}",
		scheme = scheme,

	shell:
		"""
		python3 pmlst/pmlst.py -i {input} -o {params.output_dir} -p pmlst/pmlst_db {params.pmlst_tool} -s {params.db} -x -t {params.tmp}
		"""

rule name_append:
	input:
		config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/results_tab.tsv"
	output:
		config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/results_tab_named.tsv"
	threads:
		maxthreads
	shell:
		"""awk 'NR == 1 {{print $0 "\tname_file"; next;}}{{print $0 "\t" FILENAME;}}' {input} > {output}"""


rule combine:
	threads:
		maxthreads
	input:
		expand(config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/results_tab_named.tsv", sample=sample_ids, prefix=prefix, scheme=scheme)
	output:
		config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/pMLST_temp.txt"
	threads:
		maxthreads
	shell:
		"""cat {input} > {output}"""

rule clean:
	input:
		config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/pMLST_temp.txt"
	output:
		config['outdir']+"/{prefix}/pMLST/{scheme}/{sample}.out/{scheme}.txt"
	threads:
		maxthreads
	shell:
		"""awk 'FNR==1 {{ header = $0; print }} $0 != header' {input} > {output}"""


#rule data_combine:
#	input:
#		config['outdir']+"{sample}/{sample}_blastn_results_named.tsv"
#	output:
#		config['outdir']+"{sample}.dummy_file"
#	params:
#		outfile = config['outdir']+"pMLST.txt",
#	shell:
#		"""
#		touch {params.outfile}
#		awk 'NR == 1 {{print $0 "\tname_file"; next;}}{{print $0 "\t" FILENAME;}}' {input} >> {params.outdir}
#		touch {output}
#		"""
